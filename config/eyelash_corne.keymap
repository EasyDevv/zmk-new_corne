#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*
   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

*/
/* 
KEY POSITIONS
╭────────────────────────╮ ╭────────────────────────╮     
│ 0   1   2   3   4   5  │ │ 7   8   9   10  11  12 │         
│ 13  14  15  16  17  18 │ │ 22  23  24  25  26  27 │     
│ 28  29  30  31  32  33 │ │ 36  37  38  39  40  41 │   
╰───────────╮ 42  43  44 │ │ 45  46  47 ╭───────────╯     
            ╰────────────╯ ╰────────────╯ 

QWERTY POSITIONS
╭────────────────────────╮ ╭────────────────────────╮     
│ 0   Q   W   E   R   T  │ │ Y   U   I   O   P   12 │         
│ 13  A   S   D   F   G  │ │ H   J   K   L   ;   27 │
│ 28  Z   X   C   V   B  │ │ N   M   ,   .   /   41 │
╰───────────╮ 42  43  44 │ │ 45  46  47 ╭───────────╯     
            ╰────────────╯ ╰────────────╯ 

JOYSTICK POSITIONS
╭──────────╮
│    6     │
│ 19 35 20 │
│    21    │
╰──────────╯
*/

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 8000  // 600
#define U_MOUSE_MOVE_EXPONENT 2
// #define U_MOUSE_MOVE_TIME 650
#define U_MOUSE_MOVE_DELAY 0

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 100a
#define U_MOUSE_SCROLL_EXPONENT 1
#define U_MOUSE_SCROLL_TIME 5000
#define U_MOUSE_SCROLL_DELAY 0

// homerow therms

#define TAP_TERM_MS 340
#define QUICK_TAP_MS 175
#define REQ_PRIOR_IDLE_MS 120

// combo terms

#define COMBO_TERM_FAST 18
#define COMBO_IDLE_FAST 150
#define COMBO_TERM_SLOW 30
#define COMBO_IDLE_SLOW 50

// tapdance terms

#define TAPDANCE_TERM 300

// key positions

#define LEFT_KEYS 0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33
#define RIGHT_KEYS 7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41
#define LEFT_THUMB_KEYS 42 43 44
#define RIGHT_THUMB_KEYS 45 46 47
#define ALL_THUMB_KEYS 42 43 44 45 46 47
#define JOYSTICK_KEYS 6 19 20 21 35 // up left right down click

/ {
    behaviors {
        td_dot: td_dot {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp DOT>, <&kp COMMA>;
        };

        td_colon_semi: td_colon_semi {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp COLON>, <&kp SEMI>;
        };

        td_lpar: td_lpar {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp LPAR>, <&kp RPAR>; 
        };


        td_lbrc: td_lbrc {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        td_lt: td_lt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp LT>, <&kp GT>;
        };

        td_lbkt: td_lbkt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td_sqt: td_sqt {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&kp SQT>, <&kp DQT>;
        };

        td_slash: td_slash {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&rhm BSLH SLASH>, <&kp PIPE>;
        };

        td_copy: td_copy {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <TAPDANCE_TERM>;
            bindings = <&lhm LC(C) LC(V)>,  <&kp LC(X)>;
        };


        lhm: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TAP_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQ_PRIOR_IDLE_MS>;
            hold-trigger-key-positions = <RIGHT_KEYS>, <ALL_THUMB_KEYS>;

            hold-trigger-on-release;
        };

        rhm: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <TAP_TERM_MS>;
            quick-tap-ms = <QUICK_TAP_MS>;
            require-prior-idle-ms = <REQ_PRIOR_IDLE_MS>;
            hold-trigger-key-positions = <LEFT_KEYS>, <ALL_THUMB_KEYS>;

            hold-trigger-on-release;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll: scroll {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&kp PG_DN>, <&kp PG_UP>;

        // tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        // Horizontal ==============================

        close {
            bindings = <&kp LA(F4)>;
            key-positions = <0 1>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        // Left - <1 2> <14 15> <29 30>

        qw {
            bindings = <&kp LC(A)>;
            key-positions = <1 2>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        as {
            bindings = <&kp LC(S)>;
            key-positions = <14 15>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        zx {
            bindings = <&kp LC(Z)>;
            key-positions = <29 30>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        // Left - <2 3> <15 16> <30 31>

        xc {
            bindings = <&none>;
            key-positions = <30 31>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        // Left - <3 4> <16 17> <31 32>

        cv {
            bindings = <&none>;
            key-positions = <31 32>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        // Right - <7 8> <22 23> <36 37>

        yu {
            bindings = <&none>;
            key-positions = <7 8>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        hj {
            bindings = <&none>;
            key-positions = <22 23>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        nm {
            bindings = <&none>;
            key-positions = <36 37>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        // Vertical ==============================
        // Left - <2 15> <3 16> <4 17> <5 18>

        ws {
            bindings = <&kp EXCL>;
            key-positions = <2 15>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        ed {
            bindings = <&kp AT>;
            key-positions = <3 16>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        rf {
            bindings = <&kp DLLR>;
            key-positions = <4 17>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        tg {
            bindings = <&kp HASH>;
            key-positions = <5 18>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        // Left - <15 30> <16 31> <17 32> <18 33>

        sx {
            bindings = <&kp PRCNT>;
            key-positions = <15 30>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        dc {
            bindings = <&kp CARET>;
            key-positions = <16 31>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        fv {
            bindings = <&kp AMPS>;
            key-positions = <17 32>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        gb {
            bindings = <&kp STAR>;
            key-positions = <18 33>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        // Right - <7 22> <8 23> <9 24> <10 25>

        yh {
            bindings = <&kp MINUS>;
            key-positions = <7 22>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        uj {
            bindings = <&kp PLUS>;
            key-positions = <8 23>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        ik {
            bindings = <&none>;
            key-positions = <9 24>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        ol {
            bindings = <&kp QMARK>;
            key-positions = <10 25>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        // Right - <22 36> <23 37> <24 38> <25 39>

        hn {
            bindings = <&kp UNDER>;
            key-positions = <22 36>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        jm {
            bindings = <&kp EQUAL>;
            key-positions = <23 37>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_SLOW>;
            require-prior-idle-ms = <COMBO_TERM_SLOW>;
        };

        l_semi {
            bindings = <&none>;
            key-positions = <25 26>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        dot_slash {
            bindings = <&none>;
            key-positions = <39 40>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        minimize {
            bindings = <&kp LG(DOWN)>;
            key-positions = <11 12>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        semi_edge {
            bindings = <&none>;
            key-positions = <26 27>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        slash_edge {
            bindings = <&none>;
            key-positions = <40 41>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };

        // Special ==============================
        hangul {
            bindings = <&kp RALT>;
            key-positions = <18 22>;
            layers = <0>;
            timeout-ms = <COMBO_IDLE_FAST>;
            require-prior-idle-ms = <COMBO_TERM_FAST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC     &kp Q        &kp W        &kp E          &kp R         &kp T                                     &mmv MOVE_UP                     &kp Y         &kp U         &kp I             &kp O           &kp P       &td_sqt
&lhm LS(TAB) TAB     &lhm LGUI A  &lhm LALT S  &lhm LSHIFT D  &lhm LCTRL F  &kp G                     &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H         &rhm LCTRL J  &rhm LSHIFT K     &rhm LALT L     &td_lpar    &td_lbrc
&td_copy    &kp Z        &kp X        &kp C          &kp V         &kp B        &mkp RCLK                    &mmv MOVE_DOWN                   &kp N         &kp M         &rhm COMMA DOT    &rhm SEMI COLON  &td_lbkt    &td_lt
                                      &lt 1 LALT     &lt 2 SPACE   &lt 3 RALT                                                                 &lt 4 ENTER   &kp BSPC      &td_slash
            >;

            sensor-bindings = <&scroll>;
        };

        lower_layer {
            display-name = "BT";
            bindings = <
&none  &none            &none           &none         &none         &none                                     &mmv UP                &none            &kp PG_UP        &kp UP           &kp PG_DN            &none  &none
&none  &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv LEFT  &mkp RCLK  &mmv RIGHT  &none            &kp LEFT         &kp DOWN         &kp RIGHT            &none  &none
&none  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &none         &none         &rgb_ug RGB_EFF  &kp C_MUTE               &mmv DOWN              &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &none  &none
                                        &none         &none         &none                                                            &none            &none            &none
            >;

            sensor-bindings = <&scroll>;
        };

        raise_layer {
            display-name = "NAV";
            bindings = <
&none     &none     &none     &none       &none      &none                  &none         &none  &kp PG_UP  &kp UP    &kp PG_DN  &kp DEL   &kp BSPC
&kp CAPS  &kp LGUI  &kp LALT  &kp LSHIFT  &kp LCTRL  &none           &none  &none  &none  &none  &kp LEFT   &kp DOWN  &kp RIGHT  &kp HOME  &kp ESC
&none     &none     &none     &none       &none      &none  &none           &none         &none  &none      &none     &none      &kp END   &kp INS
                              &none       &none      &none                                &none  &none      &none
            >;

            sensor-bindings = <&scroll>;
        };

        FN {
            display-name = "FN";
            bindings = <
&kp GRAVE   &kp F12  &kp F7  &kp F8     &kp F9    &kp EQUAL                  &none         &none  &none      &none       &none     &none  &none
&kp CAPS    &kp F11  &kp F4  &kp F5     &kp F6    &kp MINUS           &none  &none  &none  &none  &kp LCTRL  &kp LSHIFT  &kp LALT  &none  &bootloader
&kp LSHIFT  &kp F10  &kp F1  &kp F2     &kp F3    &kp PLUS   &none           &none         &none  &none      &none       &none     &none  &sys_reset
                             &kp LCTRL  &kp LALT  &kp ENTER                                &none  &none      &none
            >;

            sensor-bindings = <&scroll>;
        };

        Number {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE   &kp BSPC  &kp N7  &kp N8     &kp N9    &kp EQUAL                  &none         &none  &none      &none       &none     &kp DEL  &kp BSPC
&kp CAPS    &none     &kp N4  &kp N5     &kp N6    &kp MINUS           &none  &none  &none  &none  &kp LCTRL  &kp LSHIFT  &kp LALT  &none    &kp ESC
&kp LSHIFT  &kp N0    &kp N1  &kp N2     &kp N3    &kp PLUS   &none           &none         &none  &none      &none       &none     &none    &none
                              &kp LCTRL  &kp LALT  &kp ENTER                                &none  &none      &none
            >;

            sensor-bindings = <&scroll>;
        };
    };
};
